/*
  AB: The CSS below needs to be revised. It's not clear what is used and where.
  Copy/pasted together with the whole tree component.
*/

.tree {
  overflow: auto;
}

.tree-root,
.tree-children {
  list-style: none;
  padding: 0;
}

.tree > .tree-root,
.tree > .tree-filter-empty {
  padding: 3px;
  box-sizing: border-box;
}

.tree.tree--draggable .tree-node:not(.selected) > .tree-content:hover {
  background: transparent;
}

.drag-above,
.drag-below,
.drag-on {
  position: relative;
  z-index: 1;
}

.drag-on > .tree-content {
  background: $gray-100;
  outline: 1px solid $bg-highlighted;
}

.drag-above > .tree-content::before, .drag-below > .tree-content::after {
  content: '';

  display: block;
  height: $spacer*.5;

  position: absolute;
  left: 0;
  right: 0;
  z-index: 2;

  box-sizing: border-box;

  background-color: $primary;
  background-clip: padding-box;

  border: 3px solid $primary;
  border-bottom-color: transparent;
  border-top-color: transparent;
  border-radius: 0;
}

.drag-above > .tree-content::before {
  top: 0;
  transform: translateY(-50%);
}

.drag-below > .tree-content::after {
  bottom: 0;
  transform: translateY(50%);
}

// ***********************

.tree-node {
  white-space: nowrap;
  display: flex;
  flex-direction: column;
  position: relative;
  box-sizing: border-box;
}

.tree-content {
  display: flex;
  align-items: center;
  padding: 3px;
  width: 100%;

  box-sizing: border-box;

  cursor: pointer;
}

.tree-node:not(.selected) > .tree-content:hover {
  background: $gray-200;
}

.tree-node.selected > .tree-content {
  background-color: $bg-highlighted;
}

.tree-node.disabled > .tree-content:hover {
  background: inherit;
}

.tree-arrow.has-child {
  margin-left: 0;
  width: $spacer;
  position: relative;
}

.tree-checkbox {
  flex-shrink: 0;
  position: relative;
  width: $spacer;
  height: $spacer;
  box-sizing: border-box;

  border: $border-width solid $border-color;
  border-radius: $border-radius-sm;

  background: $white;

  transition: border-color .25s, background-color .25s;
}

.tree-checkbox:after,
.tree-arrow:after {
  content: "";

  position: absolute;
  display: block;
}

.tree-checkbox.checked,
.tree-checkbox.indeterminate {
  background-color: #3a99fc;
  border-color: #218eff;
}

.tree-checkbox.checked:after {
  box-sizing: content-box;
  border: $border-width solid $white; /* probably width would be rounded in most cases */
  border-left: 0;
  border-top: 0;
  left: 9px;
  top: 3px;
  height: 15px;
  width: 8px;
  transform: rotate(45deg) scaleY(0);
  transition: transform .25s;
  transform-origin: center;
}

.tree-checkbox.checked:after {
  transform: rotate(45deg) scaleY(1);
}

.tree-checkbox.indeterminate:after {
  background-color: $white;
  top: 50%;
  left: 20%;
  right: 20%;
  height: 2px;
}

.tree-node.selected > .tree-content > .tree-anchor {
  outline: none;
}

.tree-node.disabled > .tree-content > .tree-anchor {
  color: #989191;
  background: $white;
  opacity: .6;
  cursor: default;
  outline: none;
}

.tree-input {
  display: block;
  width: 100%;
  height: 24px;
  line-height: 24px;
  outline: none;
  border: $border-width solid #3498db;
  padding: 0 4px;
}

.l-fade-enter-active, .l-fade-leave-active {
  transition: opacity .3s, transform .3s;
  transform: translateX(0);
}

.l-fade-enter, .l-fade-leave-to {
  opacity: 0;
  transform: translateX(-2em);
}


.tree--small .tree-anchor {
  line-height: 19px;
}

.tree--small .tree-checkbox {
  width: 23px;
  height: 23px;
}

.tree--small .tree-arrow {
  height: 23px;
}

.tree--small .tree-checkbox.checked:after {
  left: 7px;
  top: 3px;
  height: 11px;
  width: 5px;
}

.tree-node.has-child.loading > .tree-content > .tree-arrow,
.tree-node.has-child.loading > .tree-content > .tree-arrow:after {
  border-radius: 50%;
  width: 15px;
  height: 15px;
  border: 0;
}

.tree-node.has-child.loading > .tree-content > .tree-arrow {
  font-size: 3px;
  position: relative;
  border-top: 1.1em solid rgba(45,45,45, 0.2);
  border-right: 1.1em solid rgba(45,45,45, 0.2);
  border-bottom: 1.1em solid rgba(45,45,45, 0.2);
  border-left: 1.1em solid #2d2d2d;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  left: 5px;
  -webkit-animation: loading 1.1s infinite linear;
  animation: loading 1.1s infinite linear;
  margin-right: 8px;
}

@-webkit-keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes loading {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

// *****************************

.tree-dragnode {
  padding: 10px;
  border: $border-width solid $border-color;
  position: fixed;
  border-radius: 8px;
  background: $white;
  transform: translate(-50%, -110%);
  z-index: 10;
}
